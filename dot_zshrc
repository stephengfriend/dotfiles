# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME=""

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git aws brew colored-man-pages git git-extras git-hubflow github kubectl node npm)

source $ZSH/oh-my-zsh.sh

# User configuration

# Fixes powerline fonts for spaceship prompt
export LANG="en_US.UTF-8"
export LC_ALL=$LANG

SPACESHIP_CHAR_SYMBOL=$
SPACESHIP_CHAR_SUFFIX=' '

SPACESHIP_PACKAGE_SHOW=false
SPACESHIP_DOCKER_SHOW=false
SPACESHIP_EXEC_TIME_ELAPSED=5
SPACESHIP_EXIT_CODE_SHOW=true

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi

export EDITOR="code -rw"

#########################################
# Migrated from `.bash_profile`         #
#########################################
export PATH="/usr/local/opt/openssl/bin:$PATH"
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$PATH"

# Add Visual Studio Code (code)
export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

# Local scripts override all. This should come last.
export PATH="$HOME/.local/bin:$PATH"

# fnm
if command -v fnm &> /dev/null; then
  eval "$(fnm env --use-on-cd)"
fi

# pyenv
if command -v pyenv &> /dev/null; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  export PATH="$PYENV_ROOT/shims:${PATH}"
  eval "$(pyenv init -)"

  if which pyenv-virtualenv-init &> /dev/null; then
    eval "$(pyenv virtualenv-init -)";
  fi
fi

# Aliases
alias grep='rg'
alias create-react-app='npx create-react-app'
alias gatsby='npx gatsby'
alias sanity='npx sanity'

# fzf config
# --height
export FZF_DEFAULT_OPTS=''
# --files: List files that would be searched but do not search
# --no-ignore: Do not respect .gitignore, etc...
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
export FZF_CTRL_T_COMMAND='$FZF_DEFAULT_COMMAND'
export FZF_CTRL_T_OPTS='--height=33% --preview="bat {}" --layout=reverse --preview-window=right:60%:wrap'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# fd - Find any directory and cd to selected directory
fd() {
 local dir
 dir=$(find ${1:-.} -path '*/\.*' -prune -o -type d \
      -print 2> /dev/null | fzf +m) &&
 cd "$dir"
}

# I should use this more
if command -v thefuck &> /dev/null; then
  eval $(thefuck --alias oops)
fi

# Auto Start Tmux
if [[ ! "$TERM_PROGRAM" == "tmux" ]] && command -v tmux &> /dev/null; then
  if [[ $TERM_PROGRAM == "vscode" ]]; then
    SESSION="vscode-`pwd | md5 | cut -c -9`"
  else
    SESSION='default'
    CAN_DESTROY=false
  fi


  if ! tmux has-session -t "$SESSION" 2> /dev/null; then
    # Create a new session.
    tmux new-session -d -s "$SESSION"
  fi

  if [[ -z "$CAN_DESTROY" ]]; then
    # Disable the destruction of the new, unattached session.
    tmux set-option -t "$SESSION" destroy-unattached off &> /dev/null
  fi

  exec tmux attach-session -t "$SESSION"
else
  if command -v neofetch &> /dev/null; then
    neofetch
  fi

  if command -v brew &> /dev/null && brew list zsh-syntax-highlighting &> /dev/null; then
    source "$(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
  fi

  if [[ -z "$ZSH_THEME" ]] && command -v starship &> /dev/null; then
    eval "$(starship init zsh)"
  fi
fi
